UI fullStack Web Developer Course Naresh IT


 ----------      L-1  ---------


       Which fullstack to learn ?


1. Full Stack Web Developer Course:
    HTML,CSS, Bootstrap,JavaScript,Sass,jQuery
    Node.js, MongoDB,ExpressJS,

2.Java Full Stack Course    
    HTML,CSS, Bootstrap,JavaScript,Sass,jQuery
    Java [Core,Adv,JSP,Spring], oracle

3. .NET Full Stack
        HTML,CSS, Bootstrap,JavaScript,Sass,jQuery
        C# ,ASP.NET,MVC,Web API , Sql Server



MERN VS MEAN Developer:

M -  MongoDB  = Database
E -  ExpressJS = Middleware
A/R - AngularJS / React  = Client Side
N - NodeJS =   - Server Side


fullStack :
     -Frontend
     -Backend

UI and UX ?

UX: User Experience = [React and AngularJS ,Vue ,BackBone ,Knockout etc..]

UI: User Interface
   HTML,CSS, JS,Bootstrap, jQuery , Photoshop ,Figma 



------------  L-2 ---------

HTML is a presentation language

-What is network ?
-What is internet ?
-What is Web?
     -Tim Berner Lee

     ------ L-3 -------
What is web ?
 web is a portion of internet with restricted access
 HTML is a language for web


 What is web Server ?

 Entire software development work on 4 Server
  --software development:
    -1. SandBox Server or Golden Server
    -2. development Server
    -3. Quality Server
    -4. Production Server
-----5. Client Server (Whatever application we build used by user)


1.SandBox Server: - it is a server where repository are kept

2.development server :- here it is build here .

3.Quality server :- here it is check here

4. Production server :- application is used here / apps /Project is already running .


---------------------

Tier and Layers architecture :-

To build a application we need 
 1.Database server
 -Database {kept on different server} database can be Oracle , MySQL ,MongoDB

2. Application server
 -application are kept on application server {JSP,PHP,Node.Js}

3.Client server
 -client is kept on client server {user /Client}


Application run on three tier 
 - Web application run on 3 tier 

 {UI Developer work on User/Client server} html,css,js,angular,React

 Application are build on Layers
  -UI layer = designing {user interface}
  -Business layer = Logic {communication}
  -Database layer = database

  how to create a resume 
   Project-A:2019-2020
   architecture: 3 tier application
   my role : UI layer

   Full Stack Developer work on 
     -UI layer = HTML ,CSS,JS,
     -Business = node js , ExpressJS ,API, Services
     -Data Layers = MongoDB,MySQL

     application are kept on Server

     Web Server 
       -Local Web Server {install on pc}
       -Cloud server eg:-{firebase,mongo,aws,azure}

Address : http://127.0.0.1
Address : http://localhost:8080

website V/S web application 

Website:- it is virtual directory that provide access to the resources on server
 site= location = drive/directory
 web= location on server

-------------L-4 -------------
website V/S web application

website= static resources / no interaction
Web Application =static + dynamic resources / interaction eg netflix , amazon

Blog:- web log= blog web information

Vlog - eg: Youtube channel  journal on internet

wiki : mean quick google map because you can update the images .

Podcast :
pod : multimedia broad cast = [audio /video]= ipod

Widget: gadget for website or application : weather report /currency convertor

Web Debugger/ Developer tool  : find the bug and fix it : eg - fiddler, Postman , Swagger

set up environment:
====================

1.download and install =node js 
 cmd : node -V
 cmd:npm -V

2. Code editor 
IDE = INTEGRATED development environment
eg:vs code editor
 download extension
  - live server ,  

-----------L-5------------



create a new web application

create a folder in pc avoid on desktop
terminal in vs code = [ctrl +`]
if your terminal open with powershell thwn switch to cmd

type the following command :

 [npm init -y]
  npm= node package manager 
  init = initialix=zation of projetc 
  -y = accept all the project meta data

this will generate a new file called package .json

package.json comprises of information about the project 
 
 public = it is a repository of static resources [.html,.txt,.pdf,images]
 src = it is a source of dynamic resources [.css, .scss, .ts]

- add index.html to public folder

memory :
 static - continious memory
 dynamic - discreet memory

----------L-6-------
static page extension - .html, .htm , {same information}
dynamic page - .jsp,.php,.aspx, { information change}


          HTML
        -------
markup language - preparing content for presentation
html is not a programing language it is a presentation language

Step1:GML is 1st markup language , developed by currency
Step2:SGML Standard generic markup language , develop by IETF [Internet Engineering task force]
Step3: Whatwg and w3c started the evolution of HTML

Latest version of HTML is HTML5


HTML4 V/s HTML5

 
html are collection of elements that are arranged in DOM [document object module]

html rendering are done in [browser engine]


bytes=>charecter=>tokens=>nodes=>dom=>rendering=>=>layout=>paint

html elements are classified as following:-

1.normal elements
2.void elements
3.rc data elements
4.raw text elements
5.foreign elements

1.Normal element :-  it return the presentation on callback , -it will not show  the presentation  eg.: <b></b> , 
- it require the start tag and end tag.

2.void element :- it does not return the presentation on callback , it require additional attributes ,- it does'nt require the end elements
eg:-<img src="" alt="" width="100" height="100"/>,<link />
- this are also called self ending elements.


3.Rich content data elements:-
 -will not allow any another element with in the context.
 -it is only for the plain text eg:-<textarea>


4. Raw text elements:-
 -no tag require
 eg:
copyright symbol using code syntax &copy; &#8377;

5. foreign elements:-
eg:-Canvas,SVG,MathML,

       ----------L-7------------


HTML file extension 
.html,
.htm
both are same.
[html pages can be created with ms word , ms excel]
use only .html

structure of html :

1.document declaration 

<!DOCTYPE html> -it indicate that we are using the html5

2.document scope
<html></html>
it specify the start and end of document 

document attribute <html lang-"en-in"></html>
-html everything is called attribute


--------L-8---------

creating favicon 

go to project folder "public folder" and add folder assets name this as favicon.ico 
favicon icon must be 16*16 pixel 32*32 

web page must be 1200*720

open your favicon in ms-paint 

<link>
 
 rel- it specify the file type stylesheet for css or shortcut icon for favicon 

 href-it is hyper reference virtual path of file 

 # difference b/w href and src 

  src- it is used to get the path and display the file 

  href - it is setter ,it is used to set the path and access the file .


<meta charset="utf-8">

UTF-UNICODE TRANSFORMATION FORMAT -it is used by bot to know the language used in page

8 bit- english
16bit korean ,japanese
32 bit - chinese , arabic

meta -charset 
     -name=keyword content=""
     -name="description" content=""
     http-equiv request headers
    veiwport 

  <meta http-equiv="refresh" content="4"> -this will update the page every 4 second this is generally used in cricbuzz /realtime data upadte to refresh the page 

meta veiw port is used for responsive page 

html color 
- you can define the html color using :-
  a) color name eg: <body bgcolor="red"></body>
  b) hex code : #RRGGBB
      R- red
      G-green
      B- blue

color value will be -(0-9),a,b,c,d,e,f
 0=dark
 f=light

 background :it set the background images

 align : it set the alignments
 margin 

 alink-active link
 vlink -visited link

----------L-9 COMPLETED-------

html4 body are design by table -earlier 

-html4 is not SEO friendly
-HTML5 has introduced semantic element 
 to make html page more SEO friendly

 eg:- aside,article, dialog,figure,figcaption, header,footer,section,main,div,span,nav,
 menu etc.


 div - indicate the block element . ie., loading the content 100%
 span- it indicate the inline element . ie., loading the content line by line
 